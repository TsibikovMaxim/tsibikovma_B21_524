import cv2
from glob import glob
import os

def cheating_otsu(input_path: str, output_path:str) -> None:
    """–í —Ä–∞–º–∫–∞—Ö –∫—É—Ä—Å–∞ —è –±—É–¥—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å 
    –≤ —Ç.—á. –º–µ—Ç–æ–¥—ã –±–∏–Ω–∞—Ä–∏–∑–∞—Ü–∏–∏ –∫–∞–∫ –º–æ–¥—É–ª–∏ 
    –∏–∑ —Å—Ç–æ—Ä–æ–Ω–Ω–∏–∫—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫. –í–∞–º —Ç–∞–∫ –¥–µ–ª–∞—Ç—å –Ω–µ–ª—å–∑—è!üòú"""

    image = cv2.imread(input_path, cv2.IMREAD_GRAYSCALE)

    # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ CLAHE
    # clahe = cv2.createCLAHE(clipLimit=img3, tileGridSize=(20,20))
    # image = clahe.apply(image)

    # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –±–∏–Ω–∞—Ä–∏–∑–∞—Ü–∏–∏ —Å –∫—Ä–∏—Ç–µ—Ä–∏–µ–º –û—Ç—Å—É
    _, binary_image = cv2.threshold(image, 0, 255, cv2.THRESH_OTSU)

    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –±–∏–Ω–∞—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Ñ–∞–π–ªz    
    cv2.imwrite(output_path, binary_image)

def main():
    current_dir = os.path.dirname(os.path.abspath(__file__))
    output_path = os.path.join(current_dir, 'output.txt')
    relative_path = "2sem/results/input/*"
    for input_path in glob(relative_path):
        curr_opath = os.path.join(output_path, os.path.basename(input_path))
        cheating_otsu(input_path, curr_opath)

if __name__ == "__main__":
    main()